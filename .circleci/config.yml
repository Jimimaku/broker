version: 2.1

orbs:
  prodsec: snyk/prodsec-orb@1.0
  snyk: snyk/snyk@1.7.2

defaults: &defaults
  docker:
    - image: cimg/node:18.17
  working_directory: ~/broker
filter-tags-only: &filter-tags-only
  filters:
    tags:
      only: /^v.*/
    branches:
      ignore: /.*/
filter-dev-branch-only: &filter-dev-branch-only
  filters:
    branches:
      only: /dev\/.*/

parameters:
  fail_on_issues:
    type: boolean
    default: true

commands:
  dockerhub-login:
    steps:
      - run:
          name: Log in to a Docker registry
          command: echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
  dockerhub-logout:
    steps:
      - run:
          name: Logout from a Docker registry
          command: docker logout
  get-latest-broker-version:
    description: "Get latest version of Broker NPM package"
    steps:
      - run:
          name: Get latest version of Broker NPM package
          command: |
            echo "Getting latest version of Broker NPM package..."
            BROKER_LATEST_VERSION=$(npm view snyk-broker --json | jq -r '."dist-tags"' | jq -r '."latest"')
            echo "export BROKER_LATEST_VERSION=$BROKER_LATEST_VERSION" >> "$BASH_ENV"
  get-latest-nodejs-version:
    description: "Get latest version of specific Node.js cycle"
    parameters:
      cycle:
        type: string
        default: "18"
    steps:
      - run:
          name: Get latest Node.js <<parameters.cycle>> version
          command: |
            echo "Getting latest Node.js <<parameters.cycle>> version..."
            NODE_LATEST_VERSION=$(curl --silent https://endoflife.date/api/nodejs.json | jq -r '.[] | select (.cycle == "<<parameters.cycle>>")' | jq -r .latest)
            echo "export NODE_LATEST_VERSION=$NODE_LATEST_VERSION" >> "$BASH_ENV"
  build-and-save-docker-image:
    description: "Build Docker image and save it to workspace"
    parameters:
      additional_arguments:
        type: string
        default: ""
      dockerfile:
        type: string
        default: ""
      project_name:
        type: string
        default: "broker"
    steps:
      - run:
          name: Build Docker image (<<parameters.dockerfile>>)
          command: |
            echo "Building Broker image $CIRCLE_PROJECT_REPONAME:$CIRCLE_WORKFLOW_ID..."
            docker build \
              <<#parameters.additional_arguments>><<parameters.additional_arguments>><</parameters.additional_arguments>> \
              --no-cache \
              --tag <<parameters.project_name>>:$CIRCLE_WORKFLOW_ID \
              --file <<parameters.dockerfile>> .
      - run:
          name: Archive Docker image
          command: |
            mkdir -p /tmp/workspace/images
            docker save <<parameters.project_name>>:$CIRCLE_WORKFLOW_ID \
              | gzip > "/tmp/workspace/images/<<parameters.project_name>>:$CIRCLE_WORKFLOW_ID.tar.gz"
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - images
  load-docker-image:
    description: "Load a saved Docker image"
    parameters:
      project_name:
        type: string
        default: "broker"
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load archived Docker image
          command: |
            docker load < "/tmp/workspace/images/<<parameters.project_name>>:$CIRCLE_WORKFLOW_ID.tar.gz"
  tag-and-push-docker-image:
    description: "Tag and push Docker image to registry"
    parameters:
      image_name:
        type: string
      image_tag:
        type: string
      project_name:
        type: string
        default: "broker"
    steps:
      - run:
          name: Tag Docker image
          command: |
            export IMAGE_NAME=<<parameters.image_name>>
            export IMAGE_TAG=${CIRCLE_TAG/v/''}-<<parameters.image_tag>>
            export IMAGE_TAG_LATEST=<<parameters.image_tag>>
            [[ "$IMAGE_TAG" =~ .*"base".* ]] && export IMAGE_TAG=<<parameters.image_tag>>
            [[ "$IMAGE_TAG" =~ .*"base".* ]] && export IMAGE_TAG_LATEST=<<parameters.image_tag>>
            [[ "$IMAGE_TAG" =~ .*"dev".* ]] && export IMAGE_TAG=<<parameters.image_tag>>
            [[ "$IMAGE_TAG" =~ .*"dev".* ]] && export IMAGE_TAG_LATEST=<<parameters.image_tag>>

            echo "Tagging Broker image $IMAGE_NAME:$IMAGE_TAG..."
            docker tag <<parameters.project_name>>:$CIRCLE_WORKFLOW_ID $IMAGE_NAME:$IMAGE_TAG
            echo "Tagging Broker image $IMAGE_NAME:$IMAGE_TAG_LATEST..."
            docker tag <<parameters.project_name>>:$CIRCLE_WORKFLOW_ID $IMAGE_NAME:$IMAGE_TAG_LATEST

            echo "export IMAGE_NAME=$IMAGE_NAME" >> "$BASH_ENV"
            echo "export IMAGE_TAG=$IMAGE_TAG" >> "$BASH_ENV"
            echo "export IMAGE_TAG_LATEST=$IMAGE_TAG_LATEST" >> "$BASH_ENV"
      - run:
          name: Push Docker image
          command: |
            echo "Pushing Broker image $IMAGE_NAME:$IMAGE_TAG..."
            docker push $IMAGE_NAME:$IMAGE_TAG
            echo "Pushing Broker image $IMAGE_NAME:$IMAGE_TAG_LATEST..."
            docker push $IMAGE_NAME:$IMAGE_TAG_LATEST

  prepare-dev-package-metadata:
    steps:
      - run:
          name: Prepare package.json and metadata.json for dev images
          command: |
            cd dockerfiles/.scripts && source prepare.sh

jobs:
  install-npm-packages:
    <<: *defaults
    environment:
      NODE_ENV: development
    steps:
      - checkout
      - run:
          name: Install NPM packages
          command: npm install
      - persist_to_workspace:
          root: .
          paths:
            - node_modules/
  lint:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/broker
      - run:
          name: Lint
          command: npm run lint
  lint-json-samples:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Lint JSON templates
          command: ./lintVerifier.sh
  test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/broker
      - run:
          name: Run tests
          command: npm test && npm run test:bin
  build-and-save-docker-image:
    <<: *defaults
    environment:
      BUILDKIT_PROGRESS: plain
      DOCKER_BUILDKIT: 1
    parameters:
      additional_arguments:
        type: string
        default: ""
      dockerfile:
        type: string
      project_name:
        type: string
        default: "broker"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - build-and-save-docker-image:
          additional_arguments: <<parameters.additional_arguments>>
          dockerfile: <<parameters.dockerfile>>
          project_name: <<parameters.project_name>>
  build-and-save-docker-ubi-image:
    <<: *defaults
    environment:
      BUILDKIT_PROGRESS: plain
      DOCKER_BUILDKIT: 1
    parameters:
      additional_arguments:
        type: string
        default: ""
      dockerfile:
        type: string
      project_name:
        type: string
        default: "broker"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - get-latest-broker-version
      - get-latest-nodejs-version
      - build-and-save-docker-image:
          additional_arguments: <<parameters.additional_arguments>> --build-arg BROKER_VERSION=$BROKER_LATEST_VERSION --build-arg NODE_VERSION=$NODE_LATEST_VERSION
          dockerfile: <<parameters.dockerfile>>
          project_name: <<parameters.project_name>>
  scan-docker-image:
    <<: *defaults
    parameters:
      project:
        type: string
      project_name:
        type: string
        default: "broker"
      severity_threshold:
        type: string
        default: "high"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - load-docker-image:
          project_name: <<parameters.project_name>>
      - snyk/scan:
          docker-image-name: <<parameters.project_name>>:$CIRCLE_WORKFLOW_ID
          fail-on-issues: <<pipeline.parameters.fail_on_issues>>
          organization: platform-broker
          project: <<parameters.project>>
          severity-threshold: <<parameters.severity_threshold>>
  tag-and-push-docker-image:
    <<: *defaults
    parameters:
      image_name:
        type: string
      image_tag:
        type: string
      project_name:
        type: string
        default: "broker"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - dockerhub-login
      - load-docker-image:
          project_name: <<parameters.project_name>>
      - tag-and-push-docker-image:
          image_name: <<parameters.image_name>>
          image_tag: <<parameters.image_tag>>
          project_name: <<parameters.project_name>>
      - dockerhub-logout
  build-and-push-dev-docker-image:
    <<: *defaults
    environment:
      BUILDKIT_PROGRESS: plain
      DOCKER_BUILDKIT: 1
    parameters:
      additional_arguments:
        type: string
        default: ""
      dockerfile:
        type: string
      image_name:
        type: string
      image_tag:
        type: string
      project_name:
        type: string
        default: "broker"
      severity_threshold:
        type: string
        default: "high"
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - dockerhub-login
      - prepare-dev-package-metadata
      - build-and-save-docker-image:
          additional_arguments: <<parameters.additional_arguments>>
          dockerfile: <<parameters.dockerfile>>
          project_name: <<parameters.project_name>>
      - load-docker-image:
          project_name: <<parameters.project_name>>
      - snyk/scan:
          docker-image-name: <<parameters.project_name>>:$CIRCLE_WORKFLOW_ID
          fail-on-issues: false
          organization: platform-broker
          project: <<parameters.project_name>>
          severity-threshold: <<parameters.severity_threshold>>
      - tag-and-push-docker-image:
          image_name: <<parameters.image_name>>
          image_tag: <<parameters.image_tag>>
          project_name: <<parameters.project_name>>
      - dockerhub-logout
  release:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/broker
      - run:
          name: Release to GitHub
          command: npm i @semantic-release/exec pkg --save-dev && npx semantic-release@19.0.5

workflows:
  CICD:
    jobs:
      - prodsec/secrets-scan:
          name: Scan repository for secrets
          context:
            - snyk-bot-slack
          channel: broker-alerts

      - install-npm-packages:
          name: Install NPM packages
          requires:
            - Scan repository for secrets

      - lint-json-samples:
          name: Lint JSON samples
          requires:
            - Install NPM packages

      - lint:
          name: Lint
          requires:
            - Install NPM packages

      - test:
          name: Test
          requires:
            - Install NPM packages

      - release:
          name: Release to GitHub and NPM
          context: nodejs-lib-release
          requires:
            - Test
          filters:
            branches:
              only:
                - master

  Release Docker UBI images:
    jobs:
      - prodsec/secrets-scan:
          name: Scan repository for secrets
          context:
            - snyk-bot-slack
          channel: broker-alerts-cicd
          <<: *filter-tags-only

      - build-and-save-docker-ubi-image:
          name: Build base UBI image
          context: team-broker-snyk
          requires:
            - Scan repository for secrets
          dockerfile: dockerfiles/base/Dockerfile.ubi
          project_name: broker-rhel-ubi
          <<: *filter-tags-only
      - scan-docker-image:
          name: Scan base UBI image
          context: team-broker-snyk
          requires:
            - Build base UBI image
          project: snyk/broker-rhel-ubi
          project_name: broker-rhel-ubi
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push base UBI image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Scan base UBI image
          image_name: snyk/broker
          image_tag: base-rhel-ubi
          project_name: broker-rhel-ubi
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build artifactory UBI image
          context: team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BROKER_TYPE=artifactory"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-artifactory
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push artifactory UBI image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build artifactory UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-artifactory
          project_name: rhel-ubi-artifactory
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build azure-repos UBI image
          context: team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BROKER_TYPE=azure-repos"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-azure-repos
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push azure-repos UBI image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build azure-repos UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-azure-repos
          project_name: rhel-ubi-azure-repos
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build bitbucket-server UBI image
          context: team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BROKER_TYPE=bitbucket-server"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-bitbucket-server
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push bitbucket-server UBI image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build bitbucket-server UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-bitbucket-server
          project_name: rhel-ubi-bitbucket-server
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build github-com UBI image
          context: team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BROKER_TYPE=github-com"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-github-com
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push github-com UBI image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build github-com UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-github-com
          project_name: rhel-ubi-github-com
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build github-enterprise UBI image
          context: team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BROKER_TYPE=github-enterprise"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-github-enterprise
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push github-enterprise UBI image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build github-enterprise UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-github-enterprise
          project_name: rhel-ubi-github-enterprise
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build gitlab UBI image
          context: team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BROKER_TYPE=gitlab"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-gitlab
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push gitlab UBI image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build gitlab UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-gitlab
          project_name: rhel-ubi-gitlab
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build jira UBI image
          context: team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BROKER_TYPE=jira"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-jira
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push jira UBI image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build jira UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-jira
          project_name: rhel-ubi-jira
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build nexus UBI image
          context: team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BROKER_TYPE=nexus"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-nexus
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push nexus UBI image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build nexus UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-nexus
          project_name: rhel-ubi-nexus
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build nexus2 UBI image
          context: team-broker-snyk
          requires:
            - Push base UBI image
          additional_arguments: "--build-arg BROKER_TYPE=nexus2"
          dockerfile: dockerfiles/Dockerfile.ubi
          project_name: rhel-ubi-nexus2
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push nexus2 UBI image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build nexus2 UBI image
          image_name: snyk/broker
          image_tag: rhel-ubi-nexus2
          project_name: rhel-ubi-nexus2
          <<: *filter-tags-only

  Release Docker images:
    jobs:
      - prodsec/secrets-scan:
          name: Scan repository for secrets
          context:
            - snyk-bot-slack
          channel: broker-alerts-cicd
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /dev\/.*/

      - build-and-save-docker-image:
          name: Build base image
          context: team-broker-snyk
          dockerfile: dockerfiles/base/Dockerfile
          project_name: broker
          <<: *filter-tags-only
      - scan-docker-image:
          name: Scan base image
          context: team-broker-snyk
          requires:
            - Build base image
          project: snyk/broker
          project_name: broker
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push base image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Scan base image
          image_name: snyk/broker
          image_tag: base
          project_name: broker
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build base image (nlatest)
          context: team-broker-snyk
          additional_arguments: "--build-arg NODE_VERSION=20.6.0"
          dockerfile: dockerfiles/base/Dockerfile
          project_name: broker
          <<: *filter-tags-only
      - scan-docker-image:
          name: Scan base image (nlatest)
          context: team-broker-snyk
          requires:
            - Build base image (nlatest)
          project: snyk/broker
          project_name: broker
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push base image (nlatest)
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Scan base image (nlatest)
          image_name: snyk/broker
          image_tag: base-nlatest
          project_name: broker
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build artifactory image
          context: team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BROKER_TYPE=artifactory"
          dockerfile: dockerfiles/Dockerfile
          project_name: artifactory
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push artifactory image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build artifactory image
          image_name: snyk/broker
          image_tag: artifactory
          project_name: artifactory
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build azure-repos image
          context: team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BROKER_TYPE=azure-repos"
          dockerfile: dockerfiles/Dockerfile
          project_name: azure-repos
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push azure-repos image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build azure-repos image
          image_name: snyk/broker
          image_tag: azure-repos
          project_name: azure-repos
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build bitbucket-server image
          context: team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BROKER_TYPE=bitbucket-server"
          dockerfile: dockerfiles/Dockerfile
          project_name: bitbucket-server
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push bitbucket-server image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build bitbucket-server image
          image_name: snyk/broker
          image_tag: bitbucket-server
          project_name: bitbucket-server
          <<: *filter-tags-only

      # todo: refactor building CRA image
      #      - build-and-push-docker-image:
      #          name: Build container-registry-agent image
      #          context:
      #            - team-broker-docker-hub
      #            - team-broker-snyk
      #          requires:
      #            - Build snyk/ubuntu image
      #          docker_image_name: snyk/broker
      #          docker_image_tag: container-registry-agent
      #          docker_file: dockerfiles/container-registry-agent/Dockerfile
      #          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build github-com image
          context: team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BROKER_TYPE=github-com"
          dockerfile: dockerfiles/Dockerfile
          project_name: github-com
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push github-com image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build github-com image
          image_name: snyk/broker
          image_tag: github-com
          project_name: github-com
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build github-enterprise image
          context: team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BROKER_TYPE=github-enterprise"
          dockerfile: dockerfiles/Dockerfile
          project_name: github-enterprise
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push github-enterprise image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build github-enterprise image
          image_name: snyk/broker
          image_tag: github-enterprise
          project_name: github-enterprise
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build gitlab image
          context: team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BROKER_TYPE=gitlab"
          dockerfile: dockerfiles/Dockerfile
          project_name: gitlab
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push gitlab image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build gitlab image
          image_name: snyk/broker
          image_tag: gitlab
          project_name: gitlab
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build jira image
          context: team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BROKER_TYPE=jira"
          dockerfile: dockerfiles/Dockerfile
          project_name: jira
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push jira image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build jira image
          image_name: snyk/broker
          image_tag: jira
          project_name: jira
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build nexus image
          context: team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BROKER_TYPE=nexus"
          dockerfile: dockerfiles/Dockerfile
          project_name: nexus
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push nexus image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build nexus image
          image_name: snyk/broker
          image_tag: nexus
          project_name: nexus
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build nexus2 image
          context: team-broker-snyk
          requires:
            - Push base image
          additional_arguments: "--build-arg BROKER_TYPE=nexus2"
          dockerfile: dockerfiles/Dockerfile
          project_name: nexus2
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push nexus2 image
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build nexus2 image
          image_name: snyk/broker
          image_tag: nexus2
          project_name: nexus2
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build artifactory image (nlatest)
          context: team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:base-nlatest --build-arg BROKER_TYPE=artifactory"
          dockerfile: dockerfiles/Dockerfile
          project_name: artifactory-nlatest
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push artifactory image (nlatest)
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build artifactory image (nlatest)
          image_name: snyk/broker
          image_tag: artifactory-nlatest
          project_name: artifactory-nlatest
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build azure-repos image (nlatest)
          context: team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:base-nlatest --build-arg BROKER_TYPE=azure-repos"
          dockerfile: dockerfiles/Dockerfile
          project_name: azure-repos-nlatest
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push azure-repos image (nlatest)
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build azure-repos image (nlatest)
          image_name: snyk/broker
          image_tag: azure-repos-nlatest
          project_name: azure-repos-nlatest
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build bitbucket-server image (nlatest)
          context: team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:base-nlatest --build-arg BROKER_TYPE=bitbucket-server"
          dockerfile: dockerfiles/Dockerfile
          project_name: bitbucket-server-nlatest
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push bitbucket-server image (nlatest)
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build bitbucket-server image (nlatest)
          image_name: snyk/broker
          image_tag: bitbucket-server-nlatest
          project_name: bitbucket-server-nlatest
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build github-com image (nlatest)
          context: team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:base-nlatest --build-arg BROKER_TYPE=github-com"
          dockerfile: dockerfiles/Dockerfile
          project_name: github-com-nlatest
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push github-com image (nlatest)
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build github-com image (nlatest)
          image_name: snyk/broker
          image_tag: github-com-nlatest
          project_name: github-com-nlatest
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build github-enterprise image (nlatest)
          context: team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:base-nlatest --build-arg BROKER_TYPE=github-enterprise"
          dockerfile: dockerfiles/Dockerfile
          project_name: github-enterprise-nlatest
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push github-enterprise image (nlatest)
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build github-enterprise image (nlatest)
          image_name: snyk/broker
          image_tag: github-enterprise-nlatest
          project_name: github-enterprise-nlatest
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build gitlab image (nlatest)
          context: team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:base-nlatest --build-arg BROKER_TYPE=gitlab"
          dockerfile: dockerfiles/Dockerfile
          project_name: gitlab-nlatest
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push gitlab image (nlatest)
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build gitlab image (nlatest)
          image_name: snyk/broker
          image_tag: gitlab-nlatest
          project_name: gitlab-nlatest
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build jira image (nlatest)
          context: team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:base-nlatest --build-arg BROKER_TYPE=jira"
          dockerfile: dockerfiles/Dockerfile
          project_name: jira-nlatest
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push jira image (nlatest)
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build jira image (nlatest)
          image_name: snyk/broker
          image_tag: jira-nlatest
          project_name: jira-nlatest
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build nexus image (nlatest)
          context: team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:base-nlatest --build-arg BROKER_TYPE=nexus"
          dockerfile: dockerfiles/Dockerfile
          project_name: nexus-nlatest
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push nexus image (nlatest)
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build nexus image (nlatest)
          image_name: snyk/broker
          image_tag: nexus-nlatest
          project_name: nexus-nlatest
          <<: *filter-tags-only

      - build-and-save-docker-image:
          name: Build nexus2 image (nlatest)
          context: team-broker-snyk
          requires:
            - Push base image (nlatest)
          additional_arguments: "--build-arg BASE_IMAGE=snyk/broker:base-nlatest --build-arg BROKER_TYPE=nexus2"
          dockerfile: dockerfiles/Dockerfile
          project_name: nexus2-nlatest
          <<: *filter-tags-only
      - tag-and-push-docker-image:
          name: Push nexus2 image (nlatest)
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - Build nexus2 image (nlatest)
          image_name: snyk/broker
          image_tag: nexus2-nlatest
          project_name: nexus2-nlatest
          <<: *filter-tags-only

      - approve-build-github-com-dev:
          name: github-com-dev image
          type: approval
          requires:
            - Scan repository for secrets
          <<: *filter-dev-branch-only
      - build-and-push-dev-docker-image:
          name: Build and push github-com image (dev)
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - github-com-dev image
          additional_arguments: "--build-arg BROKER_TYPE=github-com"
          dockerfile: dockerfiles/Dockerfile.dev
          image_name: snyk/broker
          image_tag: github-com-dev
          project_name: github-com-dev
          <<: *filter-dev-branch-only

      - approve-build-gitlab-dev:
          name: gitlab-dev image
          type: approval
          requires:
            - Scan repository for secrets
          <<: *filter-dev-branch-only
      - build-and-push-dev-docker-image:
          name: Build and push gitlab image (dev)
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - gitlab-dev image
          additional_arguments: "--build-arg BROKER_TYPE=gitlab"
          dockerfile: dockerfiles/Dockerfile.dev
          image_name: snyk/broker
          image_tag: gitlab-dev
          project_name: gitlab-dev
          <<: *filter-dev-branch-only

      - approve-build-nexus-dev:
          name: nexus-dev image
          type: approval
          requires:
            - Scan repository for secrets
          <<: *filter-dev-branch-only
      - build-and-push-dev-docker-image:
          name: Build and push nexus image (dev)
          context:
            - team-broker-docker-hub
            - team-broker-snyk
          requires:
            - nexus-dev image
          additional_arguments: "--build-arg BROKER_TYPE=nexus"
          dockerfile: dockerfiles/Dockerfile.dev
          image_name: snyk/broker
          image_tag: nexus-dev
          project_name: nexus-dev
          <<: *filter-dev-branch-only
