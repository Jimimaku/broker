{
    "SERVICE_ENV": "universal",
    // Select only the types wanted/needed
    "BROKER_TYPES": "github,github-enterprise,bitbucket-server,gitlab,container-registry-agent,azure-repos,artifactory,nexus,nexus2",
    "ARTIFACTORY": {
        // The URL to your artifactory
        // If not using basic auth this will only be <yourdomain.artifactory.com>/artifactory
        "ARTIFACTORY_URL":"<username>:<password>@<yourdomain.artifactory.com>/artifactory",
        
        
        
        
        // Provide RES_BODY_URL_SUB with the URL of the artifactory without credentials and http protocol
        // This URL substitution is required for NPM integration
        // RES_BODY_URL_SUB":"http://<yourdomain.artifactory.com>/artifactory",
        
        // Artifactory validation url, checked by broker client systemcheck endpoint
        "BROKER_CLIENT_VALIDATION_URL":"https://$ARTIFACTORY_URL/api/system/ping",
        "BROKER_CLIENT_VALIDATION_JSON_DISABLED":"true"
    },
    "AZURE_REPOS": {
        // Guide how to get/create the token https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate?view":"azure-devops&tabs":"preview-page",
        // Scopes: Ensure Custom defined is selected and under Code select Read & write
        "AZURE_REPOS_TOKEN":"<token>",
        
        // https://dev.azure.com/<organisation name>
        "AZURE_REPOS_ORG":"<organisation name>",
        
        // the host excluding scheme
        "AZURE_REPOS_HOST":"dev.azure.com",
        
        // the url of your broker client (including scheme and port)
        "BROKER_CLIENT_URL":"https://<broker.client.hostname>:<port>",
        
        // auth header with special format
        "BROKER_CLIENT_VALIDATION_BASIC_AUTH":"PAT:$AZURE_REPOS_TOKEN",
        
        // Azure validation url, checked by broker client systemcheck endpoint
        "BROKER_CLIENT_VALIDATION_URL":"https://$AZURE_REPOS_HOST/$AZURE_REPOS_ORG/_apis/git/repositories",
        
        // the host where the git server resides
        "GIT_URL":"$AZURE_REPOS_HOST/$AZURE_REPOS_ORG",
        
        // git credentials for cloning repos
        "GIT_USERNAME":"PAT",
        "GIT_PASSWORD":"$AZURE_REPOS_TOKEN"
    },
    "BITBUCKET_SERVER": {
        // your personal username to your bitbucket server account
        "BITBUCKET_USERNAME":"<username>",
            
        // your personal password to your bitbucket server account
        "BITBUCKET_PASSWORD":"<password>",
        
        // the host where your Bitbucket Server is running, excluding scheme.
        // for bitbucket.yourdomain.com
        // this should be "bitbucket.yourdomain.com"
        "BITBUCKET":"bitbucket.yourdomain.com",
        
        // the url that the Bitbucket server API should be accessed at.
        // for bitbucket.yourdomain.com this should be
        // changed to "bitbucket.yourdomain.com/rest/api/1.0"
        "BITBUCKET_API":"$BITBUCKET/rest/api/1.0",
        
        // the url of your broker client (including scheme and port)
        // BROKER_CLIENT_URL":"
        
        // Bitbucket server validation url, checked by broker client systemcheck endpoint
        "BROKER_CLIENT_VALIDATION_URL":"https://$BITBUCKET/rest/api/1.0/projects",
        
        // Bitbucket server basic auth creds",
        "BROKER_CLIENT_VALIDATION_BASIC_AUTH":"$BITBUCKET_USERNAME:$BITBUCKET_PASSWORD",
        
        // the host where the git server resides",
        "GIT_URL":"$BITBUCKET",
        
        // git credentials for cloning repos",
        "GIT_USERNAME":"$BITBUCKET_USERNAME",
        "GIT_PASSWORD":"$BITBUCKET_PASSWORD"
        
        // the url of your snyk git client (including scheme and port).
        // GIT_CLIENT_URL":"https://<snyk-git-client-host>:<snyk-git-client-port>
    },
    "CONTAINER_REGISTRY_AGENT": {
        // The URL of your broker client (including scheme and port), used by container",
        // registry agent to call back to Snyk through brokered connection",
        "BROKER_CLIENT_URL":"https://<broker-client-host>:<broker-client-port>",
        
        // The URL of your container registry agent",
        "CR_AGENT_URL":"https://<agent-host>:<agent-port>"
    },
    "GITHUB": {
        // your personal access token to your github.com account
        "GITHUB_TOKEN":"<github-token>",
            
        // the host for GitHub, excluding scheme
        "GITHUB":"github.com",

        // the host for GitHub's raw content, excluding scheme
        "GITHUB_RAW":"raw.githubusercontent.com",

        // the GitHub REST API url, excluding scheme
        "GITHUB_API":"api.github.com",

        // the GitHub GraphQL API url, excluding scheme
        "GITHUB_GRAPHQL":"api.github.com",

        // the url of your broker client (including scheme and port)
        // BROKER_CLIENT_URL":"

        // GitHub validation url, checked by broker client systemcheck endpoint
        "BROKER_CLIENT_VALIDATION_URL":"https://$GITHUB_API/user",

        // GitHub validation request Authorization header
        "BROKER_CLIENT_VALIDATION_AUTHORIZATION_HEADER":"token $GITHUB_TOKEN",

        // the host where the git server resides
        "GIT_URL":"$GITHUB",

        // git credentials for cloning repos
        "GIT_USERNAME":"x-access-token",
        "GIT_PASSWORD":"$GITHUB_TOKEN"

        // the url of your snyk git client (including scheme and port).
        // GIT_CLIENT_URL":"https://<snyk-git-client-host>:<snyk-git-client-port>
    },
    "GITHUB_COM": {
        // your personal access token to your github.com account",
        "GITHUB_TOKEN":"<github-token>",
            
        // the host for GitHub, excluding scheme",
        "GITHUB":"github.com",

        // the host for GitHub's raw content, excluding scheme",
        "GITHUB_RAW":"raw.githubusercontent.com",

        // the GitHub REST API url, excluding scheme",
        "GITHUB_API":"api.github.com",

        // the GitHub GraphQL API url, excluding scheme",
        "GITHUB_GRAPHQL":"api.github.com",

        // the url of your broker client (including scheme and port)
        // BROKER_CLIENT_URL":"

        // GitHub validation url, checked by broker client systemcheck endpoint",
        "BROKER_CLIENT_VALIDATION_URL":"https://$GITHUB_API/user",

        // GitHub validation request Authorization header",
        "BROKER_CLIENT_VALIDATION_AUTHORIZATION_HEADER":"token $GITHUB_TOKEN",


        // the host where the git server resides",
        "GIT_URL":"$GITHUB",

        // git credentials for cloning repos",
        "GIT_USERNAME":"x-access-token",
        "GIT_PASSWORD":"$GITHUB_TOKEN"

        // the url of your snyk git client (including scheme and port).
        // GIT_CLIENT_URL":"https://<snyk-git-client-host>:<snyk-git-client-port>
    },
    "GITHUB_ENTERPRISE": {
        // your personal access token to your github enterprise account",
        "GITHUB_TOKEN":"<github-token>",
            
        // the host for your GitHub Enterprise deployment, excluding scheme",
        "GITHUB":"ghe.yourdomain.com",

        // the GitHub Enterprise REST API url, excluding scheme",
        "GITHUB_API":"$GITHUB/api/v3",

        // the GitHub Enterprise GraphQL API url, excluding scheme",
        "GITHUB_GRAPHQL":"$GITHUB/api",

        // the url of your broker client (including scheme and port)
        // BROKER_CLIENT_URL":"

        // GitHub Enterprise validation url, checked by broker client systemcheck endpoint",
        "BROKER_CLIENT_VALIDATION_URL":"https://$GITHUB_API/user",

        // GitHub Enterprise validation request Authorization header",
        "BROKER_CLIENT_VALIDATION_AUTHORIZATION_HEADER":"token $GITHUB_TOKEN",

        // The path for the broker's internal healthcheck URL. Must start with a '/'.
        "BROKER_HEALTHCHECK_PATH":"/healthcheck",

        // the host where the git server resides",
        "GIT_URL":"$GITHUB",

        // git credentials for cloning repos",
        "GIT_USERNAME":"x-access-token",
        "GIT_PASSWORD":"$GITHUB_TOKEN"

        // the url of your snyk git client (including scheme and port).
        // GIT_CLIENT_URL":"https://<snyk-git-client-host>:<snyk-git-client-port>
    },
    "GITLAB": {
        // your personal token to your Gitlab server account
        "GITLAB_TOKEN":"<gitlab-token>",
            
        // the host where your Gitlab Server is running, excluding scheme.
        // i.e. gitlab.yourdomain.com",
        "GITLAB":"gitlab.yourdomain.com",

        // the url of your broker client (including scheme and port)
        // BROKER_CLIENT_URL":"

        // GitLab validation url, checked by broker client systemcheck endpoint",
        "BROKER_CLIENT_VALIDATION_URL":"https://$GITLAB/api/v3/user?private_token:$GITLAB_TOKEN",

        // the host where the git server resides",
        "GIT_URL":"$GITLAB",

        // git credentials for cloning repos",
        "GIT_USERNAME":"oauth2",
        "GIT_PASSWORD":"$GITLAB_TOKEN"

        // the url of your snyk git client (including scheme and port).
        // GIT_CLIENT_URL":"https://<snyk-git-client-host>:<snyk-git-client-port>
    },
    "JIRA": {
        // your personal username to your Jira Server account",
        "JIRA_USERNAME":"<jira-username>",
            
        // your personal password or API token to your Jira Server account",
        "JIRA_PASSWORD":"<jira-password>",

        // your Jira Server hostname, i.e. jira.yourdomain.com",
        "JIRA_HOSTNAME":"jira.yourdomain.com",

        // the url of your broker client (including scheme and port)
        // BROKER_CLIENT_URL":"

        // Jira validation url, checked by broker client systemcheck endpoint",
        "BROKER_CLIENT_VALIDATION_URL":"https://$JIRA_HOSTNAME/rest/api/2/myself",

        // Jira basic auth creds",
        "BROKER_CLIENT_VALIDATION_BASIC_AUTH":"$JIRA_USERNAME:$JIRA_PASSWORD",
    },
    "NEXUS": {
        // The Base URL for your Nexus Repository Manager",
        // If not using basic auth this will only be "https://<your.nexus.hostname>"
        "BASE_NEXUS_URL":"https://<username>:<password>@<your.nexus.hostname>",
        
        // The URL to your Nexus Repository Manager",
        "NEXUS_URL":"$BASE_NEXUS_URL/repository",
        // Provide RES_BODY_URL_SUB with the URL of the Nexus without credentials",
        // This URL substitution is required for NPM integration",
        // RES_BODY_URL_SUB":"https://<your.nexus.hostname>/repository",
        
        // Nexus validation url, checked by broker client systemcheck endpoint",
        // users must have 'nx-metrics-all' privilege enabled to access",
        // https://support.sonatype.com/hc/en-us/articles/226254487-System-Status-and-Metrics-REST-API",
        // NOTE! If NOT using username and password in BASE_NEXUS_URL, because your Nexus server is open on a private network, then use '/service/rest/v1/status' for BROKER_CLIENT_VALIDATION_URL.
        // '/service/rest/v1/status/check' requires an authenticated connection while '/service/rest/v1/status' does not.
        //BROKER_CLIENT_VALIDATION_URL":"$BASE_NEXUS_URL/service/rest/v1/status",
        "BROKER_CLIENT_VALIDATION_URL":"$BASE_NEXUS_URL/service/rest/v1/status/check",
        
        "BROKER_CLIENT_VALIDATION_JSON_DISABLED":"true",
        
        // Disable X-Forwarded-For headers so Nexus doesn't return npm tarball uri pointing to the broker server",
        "REMOVE_X_FORWARDED_HEADERS":"true"
    },
    "NEXUS2": {
        // The Base URL for your Nexus Repository Manager",
        // If not using basic auth this will only be "https://<your.nexus.hostname>"
        "BASE_NEXUS_URL":"https://<username>:<password>@<your.nexus.hostname>",
        
        // The URL to your Nexus Repository Manager",
        "NEXUS_URL":"$BASE_NEXUS_URL/nexus/content",
        
        
        // Provide RES_BODY_URL_SUB with the URL of the Nexus without credentials",
        // This URL substitution is required for NPM integration",
        // RES_BODY_URL_SUB":"https://<your.nexus.hostname>/nexus/content",
        
        // Nexus validation url, checked by broker client systemcheck endpoint",
        // works with / without auth",
        "BROKER_CLIENT_VALIDATION_URL":"$BASE_NEXUS_URL/nexus/service/local/status",
        
        "BROKER_CLIENT_VALIDATION_JSON_DISABLED":"true"
        
    }
}